Zarodenk_Lisp
Oliver Frank
Thet Zaw
Jude Grodesky
pd 2
---------------------
A Lisp interpreter for our custom LISP dialect, built in Java and running on the JVM. Final project for Mr. Brown's APCS class, second semester. The dialect will include a few unusual features, such as the ability to include other files and define macros as preprocessor directives. The initial implementation will be minimalist and based upon John McCarthy's classic paper "A Micro-Manual for LISP - Not the whole truth," a copy of which has been provided in this repository. We will then slowly add features on an experimental branch and push to the master branch when they are stable. Our implementation of LISP will utilize some of the datastructures and algorithms we have learned throughout the semester, namely queues and trees. More will be added here in the next few weeks.





/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Splitting up of tasks was initially difficult, as each task interlinked in such a way that one needed to be done before the next was.  This was effectivly dealt with by writing interface to use that could later be implemented.

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error handling could be cleaner, but most of the weird cases that could be encountered have been considered. We're pretty robust as far as bugs are concerned.

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Learned Regular Expressions, which will be super useful when we eventually become underpaid, overworked, web-scraping interns.  Really tested our git wizardry, and dealt with some nasty merge conflicts wizardry.  

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Instead of converting trees to primitive data and using that we kept it all in tree form.  This was what worked best with the highly recursive nature of our evaluation algorithm, as we could pass subtrees back and forth easily.

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The power of building a solid code base to build on was learned the hard way.  Initial attempts to throw the code together with duck-tape and popsickle sticks were unfruitful.  Once we had a solid base to work on features basically wrote themselves.  

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


 ______   ______   __   __   __       ______   _______     
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\ 
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/ 
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \ 
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/ 
==============================================================
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


2018-05-29
--------------------------------------------------------------
OddFuture :: Wrote README.md, wrote Lexer interface
ThetHtayZaw :: wrote Parser interface
==============================================================


2018-05-30
--------------------------------------------------------------
OddFuture :: plan, proposal update, TokenType enum
ThetHtayZaw :: wrote ast files
JudeGrodesky :: Token 
==============================================================

2018-05-30
--------------------------------------------------------------
OddFuture :: flowchart and uml
JudeGrodesky :: Token regex
==============================================================

2018-06-02
--------------------------------------------------------------
JudeGrodesky :: Lexer Implementation
ThetHtayZaw :: Incomplete Implementation of ZParser
==============================================================

2018-06-03
--------------------------------------------------------------
ThetHtayZaw :: Comments, Tester files, Typecasting workaround
==============================================================

2018-06-05
--------------------------------------------------------------
ThetHtayZaw :: Plan and UML update. Minor README update
OddFuture :: General fixes, very basic eval working
==============================================================

2018-06-06
--------------------------------------------------------------
ThetHtayZaw :: cons function class
OddFuture :: eval robustified, functions abstracted. Lists ad-
ded. Namespaces set up.  Def function class and quote added.
==============================================================

2018-06-07
--------------------------------------------------------------
ThetHtayZaw :: Car, Cdr, List, Atom function classes
OddFuture :: User defined functions added via lambda, label a-
nd defun keywords.  Cond keyword added.  Recursion robustified.
==============================================================
